"""moved database to sqlite

Revision ID: fcb5d7fa789e
Revises: 
Create Date: 2022-09-22 15:23:44.604785

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fcb5d7fa789e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inst_name', sa.String(length=228), nullable=True),
    sa.Column('inst_address', sa.String(length=400), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_inst_name'), 'institution', ['inst_name'], unique=False)
    op.create_table('temp_press',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_time', sa.DateTime(), nullable=True),
    sa.Column('temp', sa.Float(), nullable=True),
    sa.Column('press', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ionization_chambers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_add', sa.Date(), nullable=True),
    sa.Column('make', sa.String(length=128), nullable=True),
    sa.Column('sn', sa.String(length=128), nullable=True),
    sa.Column('chamber_type', sa.String(length=100), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ionization_chambers_chamber_type'), 'ionization_chambers', ['chamber_type'], unique=False)
    op.create_index(op.f('ix_ionization_chambers_make'), 'ionization_chambers', ['make'], unique=False)
    op.create_table('machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('make', sa.String(length=120), nullable=True),
    sa.Column('n_name', sa.String(length=4), nullable=True),
    sa.Column('com_date', sa.Date(), nullable=True),
    sa.Column('com_technique', sa.String(length=10), nullable=True),
    sa.Column('hospital_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hospital_id'], ['institution.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_machine_com_technique'), 'machine', ['com_technique'], unique=False)
    op.create_index(op.f('ix_machine_make'), 'machine', ['make'], unique=False)
    op.create_index(op.f('ix_machine_n_name'), 'machine', ['n_name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=300), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('remember_me', sa.String(length=12), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role'), 'user', ['role'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('chamber_calfactor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_loaded', sa.Date(), nullable=True),
    sa.Column('added_by', sa.String(length=128), nullable=True),
    sa.Column('date_cal', sa.Date(), nullable=True),
    sa.Column('cal_lab', sa.String(length=128), nullable=True),
    sa.Column('cal_electrometer', sa.String(length=120), nullable=True),
    sa.Column('calfact_electrometer', sa.Float(), nullable=True),
    sa.Column('elec_voltage', sa.String(length=30), nullable=True),
    sa.Column('ndw', sa.Float(), nullable=True),
    sa.Column('cal_energy', sa.String(length=30), nullable=True),
    sa.Column('cal_machine', sa.String(length=30), nullable=True),
    sa.Column('chamber_id1', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chamber_id1'], ['ionization_chambers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electron_energy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('energy', sa.String(length=10), nullable=True),
    sa.Column('com_R50', sa.Float(), nullable=True),
    sa.Column('com_Rp', sa.Float(), nullable=True),
    sa.Column('mean_energy', sa.Float(), nullable=True),
    sa.Column('machine_id_e', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id_e'], ['machine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_electron_energy_energy'), 'electron_energy', ['energy'], unique=False)
    op.create_table('photon_energy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('energy', sa.String(length=10), nullable=True),
    sa.Column('com_dose_dmax', sa.Float(), nullable=True),
    sa.Column('com_pdd10', sa.Float(), nullable=True),
    sa.Column('com_tpr', sa.Float(), nullable=True),
    sa.Column('machine_id_p', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id_p'], ['machine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_photon_energy_energy'), 'photon_energy', ['energy'], unique=False)
    op.create_table('sr_checks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('base_line', sa.Boolean(), nullable=True),
    sa.Column('sr_source', sa.String(length=80), nullable=True),
    sa.Column('m_electrometer', sa.String(length=128), nullable=True),
    sa.Column('elect_voltage', sa.String(length=6), nullable=True),
    sa.Column('m_reading1', sa.Float(), nullable=True),
    sa.Column('m_reading2', sa.Float(), nullable=True),
    sa.Column('m_reading3', sa.Float(), nullable=True),
    sa.Column('m_temp', sa.Float(), nullable=True),
    sa.Column('m_press', sa.Float(), nullable=True),
    sa.Column('ion_chamber_id', sa.Integer(), nullable=False),
    sa.Column('hospitals_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hospitals_id'], ['institution.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ion_chamber_id'], ['ionization_chambers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdd_data_electrons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid_new_e', sa.String(length=128), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('R50', sa.Float(), nullable=True),
    sa.Column('E_not', sa.String(length=10), nullable=True),
    sa.Column('Rp', sa.Float(), nullable=True),
    sa.Column('user_added_by_e', sa.Integer(), nullable=True),
    sa.Column('beam_energy_e', sa.Integer(), nullable=True),
    sa.Column('machine_scaned_e', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['beam_energy_e'], ['electron_energy.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['machine_scaned_e'], ['machine.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_added_by_e'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pdd_data_photons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid_new_p', sa.String(length=128), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('dose_dmax', sa.Float(), nullable=True),
    sa.Column('pdd10', sa.Float(), nullable=True),
    sa.Column('tpr2010', sa.Float(), nullable=True),
    sa.Column('user_added_by_p', sa.Integer(), nullable=True),
    sa.Column('beam_energy_p', sa.Integer(), nullable=True),
    sa.Column('machine_scaned_p', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['beam_energy_p'], ['photon_energy.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['machine_scaned_p'], ['machine.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_added_by_p'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trs398_electrons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('temp', sa.Float(), nullable=False),
    sa.Column('press', sa.Float(), nullable=False),
    sa.Column('m_reading31', sa.Float(), nullable=True),
    sa.Column('m_reading32', sa.Float(), nullable=True),
    sa.Column('m_R50', sa.Float(), nullable=True),
    sa.Column('m_Rp', sa.Float(), nullable=True),
    sa.Column('b_ks', sa.Float(), nullable=True),
    sa.Column('b_kqq', sa.Float(), nullable=True),
    sa.Column('b_dose_ref', sa.Float(), nullable=True),
    sa.Column('b_dose_max', sa.Float(), nullable=True),
    sa.Column('b_pdiff', sa.Float(), nullable=True),
    sa.Column('b_electrometer', sa.String(length=128), nullable=True),
    sa.Column('b_biasVoltage', sa.String(length=10), nullable=True),
    sa.Column('b_user_id', sa.Integer(), nullable=False),
    sa.Column('ion_chamber_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('beam_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['b_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['beam_id'], ['electron_energy.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ion_chamber_id'], ['ionization_chambers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trs398_photons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('temp', sa.Float(), nullable=False),
    sa.Column('press', sa.Float(), nullable=False),
    sa.Column('m_reading21', sa.Float(), nullable=True),
    sa.Column('m_reading22', sa.Float(), nullable=True),
    sa.Column('m_reading23', sa.Float(), nullable=True),
    sa.Column('m_pdd10', sa.Float(), nullable=True),
    sa.Column('m_tpr', sa.Float(), nullable=True),
    sa.Column('m_ks', sa.Float(), nullable=True),
    sa.Column('m_kqq', sa.Float(), nullable=True),
    sa.Column('m_dose_ref', sa.Float(), nullable=True),
    sa.Column('m_electrometer', sa.String(length=128), nullable=True),
    sa.Column('m_biasVoltage', sa.String(length=10), nullable=True),
    sa.Column('m_user_id', sa.Integer(), nullable=False),
    sa.Column('ion_chamber_id', sa.Integer(), nullable=False),
    sa.Column('machine_id', sa.Integer(), nullable=False),
    sa.Column('beam_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['beam_id'], ['photon_energy.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ion_chamber_id'], ['ionization_chambers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['m_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trs398_photons')
    op.drop_table('trs398_electrons')
    op.drop_table('pdd_data_photons')
    op.drop_table('pdd_data_electrons')
    op.drop_table('sr_checks')
    op.drop_index(op.f('ix_photon_energy_energy'), table_name='photon_energy')
    op.drop_table('photon_energy')
    op.drop_index(op.f('ix_electron_energy_energy'), table_name='electron_energy')
    op.drop_table('electron_energy')
    op.drop_table('chamber_calfactor')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_role'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_machine_n_name'), table_name='machine')
    op.drop_index(op.f('ix_machine_make'), table_name='machine')
    op.drop_index(op.f('ix_machine_com_technique'), table_name='machine')
    op.drop_table('machine')
    op.drop_index(op.f('ix_ionization_chambers_make'), table_name='ionization_chambers')
    op.drop_index(op.f('ix_ionization_chambers_chamber_type'), table_name='ionization_chambers')
    op.drop_table('ionization_chambers')
    op.drop_table('temp_press')
    op.drop_index(op.f('ix_institution_inst_name'), table_name='institution')
    op.drop_table('institution')
    # ### end Alembic commands ###
